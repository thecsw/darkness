name: Go CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true
          cache: true

      - name: Verify Go version
        run: go version

      - name: Run go vet
        run: go vet ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true
          cache: true

      - name: Verify Go version
        run: go version

      - name: Verify dependencies
        run: go mod verify

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Print test coverage
        run: |
          go tool cover -func=coverage.txt

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          check-latest: true
          cache: true

      - name: Verify Go version
        run: go version

      - name: Verify dependencies
        run: go mod verify

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v

      - name: Verify binary
        run: |
          if [ ! -f "darkness" ]; then
            echo "Build failed: binary not created"
            exit 1
          fi
          echo "Build succeeded: binary created"
          ./darkness --version || echo "Binary exists but may not support --version flag"